CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)

FIND_PACKAGE(Qt4 REQUIRED)
FIND_PACKAGE(Boost)

IF (NOT Boost_FOUND)
	MESSAGE (FATAL_ERROR "Boost not found")
ENDIF (NOT Boost_FOUND)

SET(QT_USE_QTNETWORK 1)
SET(QT_USE_QTXML 1)
SET(QT_USE_QTSQL 1)

INCLUDE(${QT_USE_FILE})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

# Include our custom cmake modules
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMake)

IF(${CMAKE_SYSTEM} MATCHES "Darwin")
	FIND_LIBRARY(SECURITY Security)
ELSEIF(${CMAKE_SYSTEM} MATCHES "Linux")
	FIND_PACKAGE(PkgConfig REQUIRED)
	pkg_check_modules(GNOME_KEYRING gnome-keyring-1>=0.8)
	IF(NOT EXISTS ${GNOME_KEYRING_FOUND})
		MESSAGE("Gnome Keyring not found")
		ADD_DEFINITIONS(-DNO_KEYRING)
	ENDIF(NOT EXISTS ${GNOME_KEYRING_FOUND})
ELSE(${CMAKE_SYSTEM} MATCHES "Darwin")
	ADD_DEFINITIONS(-DNO_KEYRING)
ENDIF(${CMAKE_SYSTEM} MATCHES "Darwin")

# Subdirectories
ADD_SUBDIRECTORY(protobuf)
ADD_SUBDIRECTORY(messages)
ADD_SUBDIRECTORY(spawn)
ADD_SUBDIRECTORY(src)

# Uninstall support
CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
